{"version":3,"sources":["../../src/index.tsx"],"names":["ReactSimpleChart","x","yRange","datas","valueVisible","setValueVisible","maxValues","data","value","length","Error","Math","max","maxValue","toString","maxValueDigits","i","maxY","parseInt","ceil","y","push","display","flexWrap","marginBottom","map","marginRight","width","height","backgroundColor","color","label","minHeight","flex","flexDirection","paddingTop","position","top","v","borderRight","index","justifyContent","alignItems","borderTop","left","transform","background","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst ReactSimpleChart: React.FC<{\n  x: any[];\n  yRange?: number;\n  datas: { label: string; value: number[]; color: string }[];\n}> = ({ x, yRange = 10, datas }) => {\n  const [valueVisible, setValueVisible] = useState<number | null>(null);\n\n  let maxValues = 0;\n  for (const data of datas) {\n    if (data.value.length !== x.length)\n      throw new Error(\"x length and data value length must be the same.\");\n    maxValues += Math.max(...data.value);\n  }\n  const maxValue = maxValues.toString();\n  let maxValueDigits = \"1\";\n  for (let i = 0; i < maxValue.length - 1; i++) {\n    maxValueDigits += \"0\";\n  }\n\n  let maxY = parseInt(maxValue) / parseInt(maxValueDigits);\n\n  if (maxY % 1 === 0) maxY = (maxY + 1) * parseInt(maxValueDigits);\n  else maxY = Math.ceil(maxY) * parseInt(maxValueDigits);\n\n  const y: number[] = [];\n  for (let i = 1; i <= yRange; i++) {\n    y.push((maxY / yRange) * i);\n  }\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: 20 }}>\n        {datas.map((data) => (\n          <div style={{ display: \"flex\", marginRight: 10 }}>\n            <div\n              style={{\n                width: 20,\n                height: 20,\n                backgroundColor: data.color,\n                marginRight: 10,\n              }}\n            />\n            <span>{data.label}</span>\n          </div>\n        ))}\n      </div>\n      <div style={{ minHeight: \"100vh\", display: \"flex\", flex: 1 }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column-reverse\",\n            flex: 0,\n          }}\n        >\n          <span\n            style={{\n              width: \"100%\",\n              paddingTop: 10,\n              position: \"relative\",\n              top: -7,\n            }}\n          >\n            0\n          </span>\n          {y.map((v, i) => (\n            <span\n              key={i}\n              style={{\n                display: \"flex\",\n                height: `${100 / y.length}%`,\n                borderRight: \"1px solid #000\",\n                width: \"100%\",\n                marginRight: 10,\n              }}\n            >\n              <span style={{ position: \"relative\", top: -8 }}>{v}</span>\n            </span>\n          ))}\n        </div>\n        {x.map((v, index) => (\n          <div\n            key={index}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              width: `${100 / x.length}%`,\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column-reverse\",\n                justifyContent: \"flex-start\",\n                width: \"100%\",\n                flex: 1,\n                position: \"relative\",\n              }}\n              onMouseOver={() => setValueVisible(index)}\n              onMouseLeave={() => setValueVisible(null)}\n            >\n              {y.map((v, i) => (\n                <div\n                  key={i}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"flex-end\",\n                    height: `${100 / y.length}%`,\n                    borderTop: \"1px solid #ababab\",\n                  }}\n                />\n              ))}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column-reverse\",\n                  position: \"absolute\",\n                  height: \"100%\",\n                  width: \"50%\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                }}\n              >\n                {datas.map((data) => (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      background: data.color,\n                      height: `${(data.value[index] / maxY) * 100}%`,\n                    }}\n                  >\n                    {valueVisible === index && (\n                      <div\n                        style={{\n                          color: \"#fff\",\n                        }}\n                      >\n                        {data.value[index]}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div\n              style={{\n                borderTop: \"1px solid #000\",\n                width: \"100%\",\n                textAlign: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              {v}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default ReactSimpleChart;\n"],"file":"index.js"}