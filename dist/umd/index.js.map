{"version":3,"sources":["../../src/index.tsx"],"names":["ReactSimpleChart","yRange","datas","useState","maxValues","data","x","Math","maxValue","maxValueDigits","i","maxY","parseInt","y","display","flexWrap","marginBottom","marginRight","width","height","backgroundColor","minHeight","flex","flexDirection","paddingTop","position","top","length","borderRight","justifyContent","alignItems","setValueVisible","borderTop","left","transform","background","valueVisible","color","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst ReactSimpleChart: React.FC<{\n  x: any[];\n  yRange?: number;\n  datas: { label: string; value: number[]; color: string }[];\n}> = ({ x, yRange = 10, datas }) => {\n  const [valueVisible, setValueVisible] = useState<number | null>(null);\n\n  let maxValues = 0;\n  for (const data of datas) {\n    if (data.value.length !== x.length)\n      throw new Error(\"x length and data value length must be the same.\");\n    maxValues += Math.max(...data.value);\n  }\n  const maxValue = maxValues.toString();\n  let maxValueDigits = \"1\";\n  for (let i = 0; i < maxValue.length - 1; i++) {\n    maxValueDigits += \"0\";\n  }\n\n  let maxY = parseInt(maxValue) / parseInt(maxValueDigits);\n\n  if (maxY % 1 === 0) maxY = (maxY + 1) * parseInt(maxValueDigits);\n  else maxY = Math.ceil(maxY) * parseInt(maxValueDigits);\n\n  const y: number[] = [];\n  for (let i = 1; i <= yRange; i++) {\n    y.push((maxY / yRange) * i);\n  }\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: 20 }}>\n        {datas.map((data) => (\n          <div style={{ display: \"flex\", marginRight: 10 }}>\n            <div\n              style={{\n                width: 20,\n                height: 20,\n                backgroundColor: data.color,\n                marginRight: 10,\n              }}\n            />\n            <span>{data.label}</span>\n          </div>\n        ))}\n      </div>\n      <div style={{ minHeight: \"100vh\", display: \"flex\", flex: 1 }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column-reverse\",\n            flex: 0,\n          }}\n        >\n          <span\n            style={{\n              width: \"100%\",\n              paddingTop: 10,\n              position: \"relative\",\n              top: -7,\n            }}\n          >\n            0\n          </span>\n          {y.map((v, i) => (\n            <span\n              key={i}\n              style={{\n                display: \"flex\",\n                height: `${100 / y.length}%`,\n                borderRight: \"1px solid #000\",\n                width: \"100%\",\n                marginRight: 10,\n              }}\n            >\n              <span style={{ position: \"relative\", top: -8 }}>{v}</span>\n            </span>\n          ))}\n        </div>\n        {x.map((v, index) => (\n          <div\n            key={index}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              width: `${100 / x.length}%`,\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column-reverse\",\n                justifyContent: \"flex-start\",\n                width: \"100%\",\n                flex: 1,\n                position: \"relative\",\n              }}\n              onMouseOver={() => setValueVisible(index)}\n              onMouseLeave={() => setValueVisible(null)}\n            >\n              {y.map((v, i) => (\n                <div\n                  key={i}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"flex-end\",\n                    height: `${100 / y.length}%`,\n                    borderTop: \"1px solid #ababab\",\n                  }}\n                />\n              ))}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column-reverse\",\n                  position: \"absolute\",\n                  height: \"100%\",\n                  width: \"50%\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                }}\n              >\n                {datas.map((data) => (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      background: data.color,\n                      height: `${(data.value[index] / maxY) * 100}%`,\n                    }}\n                  >\n                    {valueVisible === index && (\n                      <div\n                        style={{\n                          color: \"#fff\",\n                        }}\n                      >\n                        {data.value[index]}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div\n              style={{\n                borderTop: \"1px solid #000\",\n                width: \"100%\",\n                textAlign: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              {v}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default ReactSimpleChart;\n"],"file":"index.js"}